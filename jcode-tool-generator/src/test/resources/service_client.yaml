packageName: ${groupId}.${appName}.client.crud
name: ${entity.simpleClassName}RestClient
classAnnotations:
  - type: org.springframework.stereotype.Component

classImplements:
  - ${serviceInterface.className}

fields:
  - name: url
    type: String
    static: true
    final: true
    initializer: RestTemplateConfig.RESOURCE_URL + "/talktowns"
  - type: org.springframework.web.client.RestTemplate

constructors:
  - body: restTemplate = new RestTemplateConfig().restTemplate();

methods:
  - name: register${entity.simpleClassName}
    type: String
    parameters:
      - type: ${groupId}.${appName}.spec.sdo.${entity.simpleClassName}Cdo
    annotations:
      - type: Override
    body : |
      return restTemplate.postForObject(url, ${entity.simpleClassName}Cdo, String.class);

  - name: find${entity.simpleClassName}
    type: ${entity.className}
    parameters:
      - type: String
        varName: ${entity.simpleClassName}Id
    annotations:
      - type: Override
    body: |
      String uri = url +"/{${entity.name}Id}";
      Map<String, String> params = new HashMap<>();
      params.put("${entity.name}Id", ${entity.name}Id);
      return restTemplate.getForObject(uri, ${entity.simpleClassName}.class, params);

  - name: findAll${entity.simpleClassName}s
    type: java.util.List<${entity.className}>
    annotations:
      - type: Override
    body: |
      return restTemplate.getForObject(url, List.class);

  - name: modify${entity.simpleClassName}
    parameters:
      - type: String
        varName: ${entity.simpleClassName}Id
      - type: io.naraplatform.share.domain.NameValueList
        varName: nameValues
    annotations:
      - type: Override
    body: |
      String uri = url +"/{${entity.name}Id}";
      Map<String, String> params = new HashMap<>();
      params.put("${entity.name}Id", ${entity.name}Id);
      restTemplate.put(uri, nameValues, params);

  - name: remove${entity.simpleClassName}
    parameters:
      - type: String
        varName: ${entity.simpleClassName}Id
    annotations:
      - type: Override
    body: |
      String uri = url +"/{${entity.name}Id}";
      Map<String, String> params = new HashMap<>();
      params.put("${entity.name}Id", ${entity.name}Id);
      restTemplate.delete (uri, params);

  - name: countAll${entity.simpleClassName}
    type: long
    annotations:
      - type: Override
    body: |
      String uri = url + "/count";
      return restTemplate.getForObject(uri, Long.class);